import tkinter as tk
from tkinter import messagebox
from tkinter import PhotoImage

#new window
def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("Farm")
    label = tk.Label(new_window, text="Welcome to the farm!")
    label.pack(padx=20, pady=20)


#button
root = tk.Tk()
root.title("Click here!")
button = tk.Button(root, image="C:\Users\User\OneDrive\Documents\hi.jpeg", command=on_button_click)
button.pack(pady=10)
root.mainloop()


#IMAGE SECURED (apple0)
from tkinter import Tk, Canvas, PhotoImage
from PIL import Image, ImageTk

def display_background_image(image_path):
    root = Tk()
    root.title("Background Image Example")
    image = Image.open(image_path)
    image = image.resize((800, 600))
    photo_image = ImageTk.PhotoImage(image)
    canvas = Canvas(root, width=800, height=600)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)
    root.mainloop()
display_background_image("./popupcodes/aple.jpg")

#IMAGE MAP
from tkinter import Tk, Canvas, PhotoImage
from PIL import Image, ImageTk

def display_background_image(image_path):
    root = Tk()
    root.title("Background Image Example")
    image = Image.open(image_path)
    image = image.resize((800, 600))
    photo_image = ImageTk.PhotoImage(image)
    canvas = Canvas(root, width=800, height=600)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)
    root.mainloop()
display_background_image("./popupcodes/hi.jpeg")


#Farm Image
from tkinter import Tk, Canvas, PhotoImage
from PIL import Image, ImageTk

def display_background_image(image_path):
    root = Tk()
    root.title("Background Image Example")
    image = Image.open(image_path)
    image = image.resize((1000, 750))
    photo_image = ImageTk.PhotoImage(image)
    canvas = Canvas(root, width=1000, height=750)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)
    root.mainloop()
display_background_image("./popupcodes/Farm.png")

#strawseeds image
from tkinter import Tk, Canvas, PhotoImage
from PIL import Image, ImageTk

def display_background_image(image_path):
    root = Tk()
    root.title("Background Image Example")
    image = Image.open(image_path)
    image = image.resize((1000, 750))
    photo_image = ImageTk.PhotoImage(image)
    canvas = Canvas(root, width=750, height=750)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)
    root.mainloop()
display_background_image("./popupcodes/StrawSeeds.png")


#Ship image
from tkinter import Tk, Canvas, PhotoImage
from PIL import Image, ImageTk

def display_background_image(image_path):
    root = Tk()
    root.title("Background Image Example")
    image = Image.open(image_path)
    image = image.resize((1000, 750))
    photo_image = ImageTk.PhotoImage(image)
    canvas = Canvas(root, width=1000, height=750)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)
    root.mainloop()
display_background_image("./popupcodes/Ship.png")

#aIRPORT IMAGE
from tkinter import Tk, Canvas, PhotoImage
from PIL import Image, ImageTk

def display_background_image(image_path):
    root = Tk()
    root.title("Background Image Example")
    image = Image.open(image_path)
    image = image.resize((1000, 750))
    photo_image = ImageTk.PhotoImage(image)
    canvas = Canvas(root, width=1000, height=750)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)
    root.mainloop()
display_background_image("./popupcodes/Airport.png")




#Button code
import tkinter as tk
def on_button_click():
    print("Button Clicked!")
root = tk.Tk()
root.title("My First GUI")
button = tk.Button(root, text="Click Me", command=on_button_click)
button.pack(pady=10)
root.mainloop()

#Hitbox code
import tkinter as tk

def on_hitbox_click(event):
    print("Hitbox Clicked!")
root = tk.Tk()
root.title("Hitbox Example")
canvas = tk.Canvas(root, width=400, height=300, bg="white")
canvas.pack()
hitbox = canvas.create_rectangle(50, 50, 150, 150, fill="blue")
canvas.tag_bind(hitbox, '<Button-1>', on_hitbox_click)
root.mainloop()

#HITBOX WITH MAP
import tkinter as tk
from PIL import Image, ImageTk

def display_background_image_with_hitbox(image_path):
    def on_hitbox_click(event):
        print("Hitbox Clicked!")

    root = tk.Tk()
    root.title("Combined Example")

    # Load and resize the background image
    image = Image.open(image_path)
    image = image.resize((800, 600))
    photo_image = ImageTk.PhotoImage(image)

    # Create a canvas for the background image
    canvas = tk.Canvas(root, width=800, height=600)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)

    # Create a rectangular hitbox on the canvas
    hitbox = canvas.create_rectangle(50, 50, 150, 150, fill="blue")
    
    # Bind the click event to the hitbox
    canvas.tag_bind(hitbox, '<Button-1>', on_hitbox_click)

    root.mainloop()

# Use the same image path you used before
display_background_image_with_hitbox("./popupcodes/hi.jpeg")

#BUTTON + MAP
import tkinter as tk
from PIL import Image, ImageTk

def display_image_and_button(image_path):
    def on_button_click():
        print("Button Clicked!")

    root = tk.Tk()
    root.title("Combined Example")

    # Load and resize the background image
    image = Image.open(image_path)
    image = image.resize((800, 600))
    photo_image = ImageTk.PhotoImage(image)

    # Create a canvas for the background image
    canvas = tk.Canvas(root, width=800, height=600)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)

    # Create a button on the canvas
    button = tk.Button(root, text="Click Me", command=on_button_click)
    canvas.create_window(400, 300, anchor="center", window=button)

    root.mainloop()

# Use the same image path you used before
display_image_and_button("./popupcodes/hi.jpeg")


#BUTTON MAP WITH COORDINATES
import tkinter as tk
from PIL import Image, ImageTk

def display_image_and_button(image_path):
    def on_button_click():
        print("Button Clicked!")

    root = tk.Tk()
    root.title("Combined Example")

    # Load and resize the background image
    image = Image.open(image_path)
    image = image.resize((800, 800))
    photo_image = ImageTk.PhotoImage(image)

    # Create a canvas for the background image
    canvas = tk.Canvas(root, width=800, height=800)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=photo_image)

    # Specify new coordinates for the button
    button_x = 200
    button_y = 400

    # Create a button on the canvas with updated coordinates
    button = tk.Button(root, text="Click Me", command=on_button_click)
    canvas.create_window(button_x, button_y, anchor="center", window=button)

    root.mainloop()

# Use the same image path you used before
display_image_and_button("./popupcodes/hi.jpeg")


# Farm button
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    print("Button Clicked!")
root = tk.Tk()
root.title("Button with Image")
image_path = "./popupcodes/Farm.png"  
image = Image.open(image_path)
image = image.resize((100, 50))  
photo_image = ImageTk.PhotoImage(image)
button = tk.Button(root, image=photo_image, command=on_button_click, bd=0, highlightthickness=0)

button.pack(pady=10)

root.mainloop()

#Exclamation button
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    print("Button Clicked!")
root = tk.Tk()
root.title("Button with Image")
image_path = "./popupcodes/Exclamation.png"  
image = Image.open(image_path)
image = image.resize((50, 50))  
photo_image = ImageTk.PhotoImage(image)
button = tk.Button(root, image=photo_image, command=on_button_click, bd=0, highlightthickness=0)

button.pack(pady=10)

root.mainloop()


#WATERPUMP BUTTON
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    print("Button Clicked!")
root = tk.Tk()
root.title("Button with Image")
image_path = "./popupcodes/WaterPump.png"  
image = Image.open(image_path)
image = image.resize((100, 50))  
photo_image = ImageTk.PhotoImage(image)
button = tk.Button(root, image=photo_image, command=on_button_click, bd=0, highlightthickness=0)

button.pack(pady=10)

root.mainloop()



#FARM BUTTON + MAP
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    print("Button Clicked!")

def display_combined_map_and_button(map_image_path, button_image_path):
    root = tk.Tk()
    root.title("Combined Example")

    # Load and resize the map image
    map_image = Image.open(map_image_path)
    map_image = map_image.resize((1000, 1000))
    map_photo_image = ImageTk.PhotoImage(map_image)

    # Create a canvas for the map image
    canvas = tk.Canvas(root, width=1000, height=1000)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

    # Load and resize the button image
    button_image = Image.open(button_image_path)
    button_image = button_image.resize((70, 35))
    button_photo_image = ImageTk.PhotoImage(button_image)

    # Create the button on the canvas
    button = tk.Button(root, image=button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
    canvas.create_window(500, 375, anchor="center", window=button)

    root.mainloop()

# Provide paths to your image files
map_image_path = "./popupcodes/hi.jpeg"
button_image_path = "./popupcodes/Farm.png"

# Call the function to display the combined map and button
display_combined_map_and_button(map_image_path, button_image_path)

#WINDOW + BUTTON
import tkinter as tk

def open_new_window():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")
    label = tk.Label(new_window, text="This is a new window!")
    label.pack()

# Create the main window
root = tk.Tk()
root.title("Main Window")

# Create a button that triggers the new window
button = tk.Button(root, text="Open New Window", command=open_new_window)
button.pack()

# Start the main event loop
root.mainloop()





#FARM BUTTON + MAP + COORDS
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    print("Button Clicked!")

def display_combined_map_and_button(map_image_path, button_image_path, button_x, button_y):
    root = tk.Tk()
    root.title("Combined Example")

    # Load and resize the map image
    map_image = Image.open(map_image_path)
    map_image = map_image.resize((1000, 1000))
    map_photo_image = ImageTk.PhotoImage(map_image)

    # Create a canvas for the map image
    canvas = tk.Canvas(root, width=1000, height=1000)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

    # Load and resize the button image
    button_image = Image.open(button_image_path)
    button_image = button_image.resize((70, 35))
    button_photo_image = ImageTk.PhotoImage(button_image)

    # Create the button on the canvas with specified coordinates
    button = tk.Button(root, image=button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
    canvas.create_window(button_x, button_y, anchor="center", window=button)

    root.mainloop()

# Provide paths to your image files
map_image_path = "./popupcodes/hi.jpeg"
button_image_path = "./popupcodes/Farm.png"

# Specify the initial coordinates for the button
initial_button_x = 300
initial_button_y = 500

# Call the function to display the combined map and button with initial coordinates
display_combined_map_and_button(map_image_path, button_image_path, initial_button_x, initial_button_y)



#FARM BUTTON COORDS + MAP + NEW WINDOW
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")
    label = tk.Label(new_window, text="This is a new window!")
    label.pack()

root = tk.Tk()  # Define root before using it in on_button_click

def display_combined_map_and_button(map_image_path, button_image_path, button_x, button_y):
    root.title("Combined Example")

    # Load and resize the map image
    map_image = Image.open(map_image_path)
    map_image = map_image.resize((1000, 1000))
    map_photo_image = ImageTk.PhotoImage(map_image)

    # Create a canvas for the map image
    canvas = tk.Canvas(root, width=1000, height=1000)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

    # Load and resize the button image
    button_image = Image.open(button_image_path)
    button_image = button_image.resize((70, 35))
    button_photo_image = ImageTk.PhotoImage(button_image)

    # Create the button on the canvas with specified coordinates
    button = tk.Button(root, image=button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
    canvas.create_window(button_x, button_y, anchor="center", window=button)

    root.mainloop()

# Provide paths to your image files
map_image_path = "./popupcodes/hi.jpeg"
button_image_path = "./popupcodes/Farm.png"

# Specify the initial coordinates for the button
initial_button_x = 300
initial_button_y = 500

# Call the function to display the combined map and button with initial coordinates
display_combined_map_and_button(map_image_path, button_image_path, initial_button_x, initial_button_y)


#FARM WINDOW + PUMP + MAP:
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")
    label = tk.Label(new_window, text="This is a new window!")
    label.pack()

def on_second_button_click():
    print("Second Button Clicked!")

root = tk.Tk()

def display_combined_map_and_buttons(map_image_path, first_button_image_path, second_button_image_path, first_button_x, first_button_y, second_button_x, second_button_y):
    root.title("Combined Example")

    # Load and resize the map image
    map_image = Image.open(map_image_path)
    map_image = map_image.resize((1000, 1000))
    map_photo_image = ImageTk.PhotoImage(map_image)

    # Create a canvas for the map image
    canvas = tk.Canvas(root, width=1000, height=1000)
    canvas.pack()
    canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

    # Load and resize the first button image
    first_button_image = Image.open(first_button_image_path)
    first_button_image = first_button_image.resize((100, 50))
    first_button_photo_image = ImageTk.PhotoImage(first_button_image)

    # Create the first button on the canvas with specified coordinates
    first_button = tk.Button(root, image=first_button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
    canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

    # Load and resize the second button image
    second_button_image = Image.open(second_button_image_path)
    second_button_image = second_button_image.resize((100, 50))
    second_button_photo_image = ImageTk.PhotoImage(second_button_image)

    # Create the second button on the canvas with specified coordinates
    second_button = tk.Button(root, image=second_button_photo_image, command=on_second_button_click, bd=0, highlightthickness=0)
    canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

    root.mainloop()

# Provide paths to your image files
map_image_path = "./popupcodes/hi.jpeg"
first_button_image_path = "./popupcodes/Farm.png"
second_button_image_path = "./popupcodes/WaterPump.png"

# Specify the initial coordinates for the buttons
initial_first_button_x = 420
initial_first_button_y = 500
initial_second_button_x = 330
initial_second_button_y = 390

# Call the function to display the combined map and buttons with initial coordinates
display_combined_map_and_buttons(map_image_path, first_button_image_path, second_button_image_path, initial_first_button_x, initial_first_button_y, initial_second_button_x, initial_second_button_y)



#WHEAT BUTTON + NEW WINDOW
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")
    label = tk.Label(new_window, text="This is a new window!")
    label.pack()

root = tk.Tk()
root.title("Button with Image")

image_path = "./popupcodes/Wheat.png"  
image = Image.open(image_path)
image = image.resize((100, 70))  
photo_image = ImageTk.PhotoImage(image)

button = tk.Button(root, image=photo_image, command=on_button_click, bd=0, highlightthickness=0)
button.pack(pady=10)

root.mainloop()


#WHEAT BUTTON + NEW WINDOW FARM
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image
    background_image_path = "./popupcodes/Farm.png"
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

root = tk.Tk()
root.title("Button with Image")

# Load and resize the button image
button_image_path = "./popupcodes/Wheat.png"
button_image = Image.open(button_image_path)
button_image = button_image.resize((100, 70))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the button on the root window
button = tk.Button(root, image=button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
button.pack(pady=10)

root.mainloop()

root.mainloop()

#Wheat Button New Window Farm + Water Button + MAP
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image
    background_image_path = "./popupcodes/Farm.png"
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

def on_second_button_click():
    print("Second Button Clicked!")

root = tk.Tk()
root.title("Combined Example")

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas = tk.Canvas(root, width=1000, height=1000)
canvas.pack()
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the first button image
first_button_image_path = "./popupcodes/Wheat.png"
first_button_image = Image.open(first_button_image_path)
first_button_image = first_button_image.resize((80, 56))
first_button_photo_image = ImageTk.PhotoImage(first_button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=first_button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
first_button_x = 420
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((80, 56))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=on_second_button_click, bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

root.mainloop()


#Water button + New window PUMP
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image
    background_image_path = "./popupcodes/WaterPump.png"
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

root = tk.Tk()
root.title("Button with Image")

# Load and resize the button image
button_image_path = "./popupcodes/Water.png"
button_image = Image.open(button_image_path)
button_image = button_image.resize((100, 70))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the button on the root window
button = tk.Button(root, image=button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
button.pack(pady=10)

root.mainloop()

root.mainloop()



#Wheat button new farm + water button new pump + map
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the first button
    background_image_path = "./popupcodes/Farm.png"
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

def on_second_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window with Background Image")

    # Load and resize the background image for the second button
    background_image_path = "./popupcodes/WaterPump.png"
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

root = tk.Tk()
root.title("Combined Example")

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas = tk.Canvas(root, width=1000, height=1000)
canvas.pack()
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the first button image
first_button_image_path = "./popupcodes/Wheat.png"
first_button_image = Image.open(first_button_image_path)
first_button_image = first_button_image.resize((80, 80))
first_button_photo_image = ImageTk.PhotoImage(first_button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=first_button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
first_button_x = 420
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((80, 80))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=on_second_button_click, bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

root.mainloop()



#Now with 3 buttons!!!! + Map
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

def on_second_button_click():
    on_button_click("./popupcodes/WaterPump.png")

def on_third_button_click():
    on_button_click("./popupcodes/Farm.png")

root = tk.Tk()
root.title("Combined Example")

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas = tk.Canvas(root, width=1000, height=1000)
canvas.pack()
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the first button image
first_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
first_button_image = Image.open(first_button_image_path)
first_button_image = first_button_image.resize((40, 40))
first_button_photo_image = ImageTk.PhotoImage(first_button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=first_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 420
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=on_second_button_click, bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=on_third_button_click, bd=0, highlightthickness=0)
third_button_x = 550  # Adjust the x-coordinate as needed
third_button_y = 480  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

root.mainloop()



#NOW WITH 4 BUTTONS + MAP
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

def on_second_button_click():
    on_button_click("./popupcodes/WaterPump.png")

def on_third_button_click():
    on_button_click("./popupcodes/Farm.png")

def on_fourth_button_click():
    on_button_click("./popupcodes/Farm.png")  # Same as the third button

root = tk.Tk()
root.title("Combined Example")

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas = tk.Canvas(root, width=1000, height=1000)
canvas.pack()
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=on_second_button_click, bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=on_third_button_click, bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=on_fourth_button_click, bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

root.mainloop()



#NOW WITH 6 GOD DAMN BUTTONS
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

def on_second_button_click():
    on_button_click("./popupcodes/WaterPump.png")

def on_third_button_click():
    on_button_click("./popupcodes/Farm.png")

def on_fourth_button_click():
    on_button_click("./popupcodes/Farm.png")  # Same as the third button

def on_fifth_button_click():
    on_button_click("./popupcodes/WaterPump.png")

def on_sixth_button_click():
    on_button_click("./popupcodes/WaterPump.png")

root = tk.Tk()
root.title("Combined Example")

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas = tk.Canvas(root, width=1000, height=1000)
canvas.pack()
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=on_second_button_click, bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=on_third_button_click, bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=on_fourth_button_click, bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=on_fifth_button_click, bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=on_sixth_button_click, bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

root.mainloop()


#STATS
import tkinter as tk
import pygame
import sys
import threading

# Initialize Pygame
pygame.init()

# Set up display
width, height = 800, 600

# Tkinter root window
root = tk.Tk()
root.title("Water and Food Status")

# Set up colors
green = (152, 245, 255)
blue = (69, 139, 0)

# Set up the stat bar dimensions
bar_width = 400
bar_height = 20

# Set up the font
font = ("Arial", 16)

# Initial water status
water_current = 69
water_max = 100

food_current = 69
food_max = 100

# Function to draw the water status bar and label
def draw_water_status():
    # Draw the water stat bar at the top
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((width - bar_width) // 15, 50, (width - bar_width) // 15 + bar_fill_width, 50 + bar_height, fill=green)

    # Display the water status label
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    # Draw the food stat bar at the top
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((width - bar_width) // 15, 150, (width - bar_width) // 15 + bar_fill_width, 150 + bar_height, fill=blue)

    # Display the food status label
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        # Update the water and food status bars
        draw_water_status()
        draw_food_status()

        # Update the Tkinter window
        root.update()

        # Cap the frame rate
        pygame.time.Clock().tick(30)

# Create a canvas for drawing
canvas = tk.Canvas(root, width=width, height=height)
canvas.pack()

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()


#STATS + 6 BUTTONS
import tkinter as tk
from PIL import Image, ImageTk
import pygame
import threading

# Initialize Pygame
pygame.init()

# Set up display
width, height = 1000, 1000

# Tkinter root window
root = tk.Tk()
root.title("Game Interface")

# Set up colors
green = (152, 245, 255)
blue = (69, 139, 0)

# Set up the stat bar dimensions
bar_width = 400
bar_height = 20

# Set up the font
font = ("Arial", 16)

# Initial water status
water_current = 69
water_max = 100

food_current = 69
food_max = 100

# Function to draw the water status bar and label
def draw_water_status():
    # Draw the water stat bar at the top
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((width - bar_width) // 2, 10, (width - bar_width) // 2 + bar_fill_width, 10 + bar_height, fill=green)

    # Display the water status label
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    # Draw the food stat bar at the top
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((width - bar_width) // 2, 40, (width - bar_width) // 2 + bar_fill_width, 40 + bar_height, fill=blue)

    # Display the food status label
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        # Update the water and food status bars
        draw_water_status()
        draw_food_status()

        # Update the Tkinter window
        root.update()

        # Cap the frame rate
        pygame.time.Clock().tick(30)

# Function to handle button clicks
def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((800, 600))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

# Create a canvas for drawing
canvas = tk.Canvas(root, width=width, height=height)
canvas.pack()

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=lambda
: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()




#SHIP + Current code
import tkinter as tk
from PIL import Image, ImageTk
import pygame
import threading

# Initialize Pygame
pygame.init()

# Set up display
width, height = 1000, 1000

# Tkinter root window
root = tk.Tk()
root.title("Game Interface")

# Set up colors
green = (152, 245, 255)
blue = (69, 139, 0)

# Set up the stat bar dimensions
bar_width = 400
bar_height = 20

# Set up the font
font = ("Arial", 16)

# Initial water status
water_current = 69
water_max = 100

food_current = 69
food_max = 100

# Function to draw the water status bar and label
def draw_water_status():
    # Draw the water stat bar at the top
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((width - bar_width) // 2, 10, (width - bar_width) // 2 + bar_fill_width, 10 + bar_height, fill=green)

    # Display the water status label
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    # Draw the food stat bar at the top
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((width - bar_width) // 2, 40, (width - bar_width) // 2 + bar_fill_width, 40 + bar_height, fill=blue)

    # Display the food status label
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        # Update the water and food status bars
        draw_water_status()
        draw_food_status()

        # Update the Tkinter window
        root.update()

        # Cap the frame rate
        pygame.time.Clock().tick(30)

# Function to handle button clicks
def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((800, 600))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

# Create a canvas for drawing
canvas = tk.Canvas(root, width=width, height=height)
canvas.pack()

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the ship image
ship_image_path = "./popupcodes/Ship.png"
ship_image = Image.open(ship_image_path)
ship_image = ship_image.resize((200, 200))
ship_photo_image = ImageTk.PhotoImage(ship_image)

# Create a canvas for the ship image
ship_canvas = canvas.create_image(650, 650, anchor="center", image=ship_photo_image)

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)


# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()

#SHIP + CARGO + CODE
import tkinter as tk
from PIL import Image, ImageTk
import pygame
import threading

# Initialize Pygame
pygame.init()

# Set up display
width, height = 1000, 1000

# Tkinter root window
root = tk.Tk()
root.title("Game Interface")

# Set up colors
green = (152, 245, 255)
blue = (69, 139, 0)

# Set up the stat bar dimensions
bar_width = 400
bar_height = 20

# Set up the font
font = ("Arial", 16)

# Initial water status
water_current = 69
water_max = 100

food_current = 69
food_max = 100

# Function to draw the water status bar and label
def draw_water_status():
    # Draw the water stat bar at the top
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((width - bar_width) // 2, 10, (width - bar_width) // 2 + bar_fill_width, 10 + bar_height, fill=green)

    # Display the water status label
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    # Draw the food stat bar at the top
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((width - bar_width) // 2, 40, (width - bar_width) // 2 + bar_fill_width, 40 + bar_height, fill=blue)

    # Display the food status label
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        # Update the water and food status bars
        draw_water_status()
        draw_food_status()

        # Update the Tkinter window
        root.update()

        # Cap the frame rate
        pygame.time.Clock().tick(30)

# Function to handle button clicks
def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((800, 600))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

# Create a canvas for drawing
canvas = tk.Canvas(root, width=width, height=height)
canvas.pack()

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the ship image
ship_image_path = "./popupcodes/Ship.png"
ship_image = Image.open(ship_image_path)
ship_image = ship_image.resize((150, 150))
ship_photo_image = ImageTk.PhotoImage(ship_image)

# Create a canvas for the ship image
ship_canvas = canvas.create_image(650, 650, anchor="center", image=ship_photo_image)

# Load and resize the second aesthetic picture (Cargo.png)
cargo_image_path = "./popupcodes/Cargo.png"
cargo_image = Image.open(cargo_image_path)
cargo_image = cargo_image.resize((200, 200))
cargo_photo_image = ImageTk.PhotoImage(cargo_image)

# Create a canvas for the second aesthetic picture
cargo_canvas = canvas.create_image(150, 670, anchor="center", image=cargo_photo_image)

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()



#Airport +Ship + Cargo + CODE
import tkinter as tk
from PIL import Image, ImageTk
import pygame
import threading

# Initialize Pygame
pygame.init()

# Set up display
width, height = 1000, 1000

# Tkinter root window
root = tk.Tk()
root.title("Game Interface")

# Set up colors
green = (152, 245, 255)
blue = (69, 139, 0)

# Set up the stat bar dimensions
bar_width = 400
bar_height = 20

# Set up the font
font = ("Arial", 16)

# Initial water status
water_current = 69
water_max = 100

food_current = 69
food_max = 100

# Function to draw the water status bar and label
def draw_water_status():
    # Draw the water stat bar at the top
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((width - bar_width) // 2, 10, (width - bar_width) // 2 + bar_fill_width, 10 + bar_height, fill=green)

    # Display the water status label
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    # Draw the food stat bar at the top
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((width - bar_width) // 2, 40, (width - bar_width) // 2 + bar_fill_width, 40 + bar_height, fill=blue)

    # Display the food status label
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        # Update the water and food status bars
        draw_water_status()
        draw_food_status()

        # Update the Tkinter window
        root.update()

        # Cap the frame rate
        pygame.time.Clock().tick(30)

# Function to handle button clicks
def on_button_click(background_image_path):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the button
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((800, 600))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

# Create a canvas for drawing
canvas = tk.Canvas(root, width=width, height=height)
canvas.pack()

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the ship image
ship_image_path = "./popupcodes/Ship.png"
ship_image = Image.open(ship_image_path)
ship_image = ship_image.resize((150, 150))
ship_photo_image = ImageTk.PhotoImage(ship_image)

# Create a canvas for the ship image
ship_canvas = canvas.create_image(650, 650, anchor="center", image=ship_photo_image)

# Load and resize the second aesthetic picture (Cargo.png)
cargo_image_path = "./popupcodes/Cargo.png"
cargo_image = Image.open(cargo_image_path)
cargo_image = cargo_image.resize((200, 200))
cargo_photo_image = ImageTk.PhotoImage(cargo_image)

# Create a canvas for the second aesthetic picture
cargo_canvas = canvas.create_image(150, 670, anchor="center", image=cargo_photo_image)

# Load and resize the third aesthetic picture (Airport.png)
airport_image_path = "./popupcodes/Airport.png"
airport_image = Image.open(airport_image_path)
airport_image = airport_image.resize((200, 200))
airport_photo_image = ImageTk.PhotoImage(airport_image)

# Create a canvas for the third aesthetic picture
airport_canvas = canvas.create_image(750, 500, anchor="center", image=airport_photo_image)

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png"), bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png"), bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()


#Water button + New window button
import tkinter as tk
from PIL import Image, ImageTk

def on_button_click():
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image
    background_image_path = "./popupcodes/WaterPump.png"
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

    # Load and resize the button image for the new window
    button_image_path_new_window = "./popupcodes/Exclamation.png"
    button_image_new_window = Image.open(button_image_path_new_window)
    button_image_new_window = button_image_new_window.resize((50, 50))
    button_photo_image_new_window = ImageTk.PhotoImage(button_image_new_window)

    # Create the button on the new window
    button_new_window = tk.Button(new_window, image=button_photo_image_new_window, command=lambda: print("Button Clicked!"), bd=0, highlightthickness=0)
    button_new_window.image = button_photo_image_new_window  # Keep a reference to the image
    button_new_window.place(x=475, y=325)  # Adjust coordinates as needed

# Main Tkinter window
root = tk.Tk()
root.title("Button with Image")

# Load and resize the button image for the main window
button_image_path = "./popupcodes/Water.png"
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the button on the main window
button = tk.Button(root, image=button_photo_image, command=on_button_click, bd=0, highlightthickness=0)
button.pack(pady=10)

root.mainloop()


#Aesthetics + Code + New Window Button
import tkinter as tk
from PIL import Image, ImageTk
import pygame
import threading

# Initialize Pygame
pygame.init()

# Set up display
width, height = 1000, 1000

# Tkinter root window
root = tk.Tk()
root.title("Game Interface")

# Set up colors
green = (152, 245, 255)
blue = (69, 139, 0)

# Set up the stat bar dimensions
bar_width = 400
bar_height = 20

# Set up the font
font = ("Arial", 16)

# Initial water status
water_current = 69
water_max = 100

food_current = 69
food_max = 100

# Function to draw the water status bar and label
def draw_water_status():
    # Draw the water stat bar at the top
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((width - bar_width) // 2, 10, (width - bar_width) // 2 + bar_fill_width, 10 + bar_height, fill=green)

    # Display the water status label
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    # Draw the food stat bar at the top
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((width - bar_width) // 2, 40, (width - bar_width) // 2 + bar_fill_width, 40 + bar_height, fill=blue)

    # Display the food status label
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        # Update the water and food status bars
        draw_water_status()
        draw_food_status()

        # Update the Tkinter window
        root.update()

        # Cap the frame rate
        pygame.time.Clock().tick(30)

# Function to handle button clicks
def on_button_click(background_image_path, button_index):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the new window
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

    # Load and resize the button image for the new window
    button_image_path_new_window = "./popupcodes/Exclamation.png"
    button_image_new_window = Image.open(button_image_path_new_window)
    button_image_new_window = button_image_new_window.resize((50, 50))
    button_photo_image_new_window = ImageTk.PhotoImage(button_image_new_window)

    # Create the button on the new window
    button_new_window = tk.Button(new_window, image=button_photo_image_new_window, command=lambda: print(f"Button {button_index} Clicked!"), bd=0, highlightthickness=0)
    button_new_window.image = button_photo_image_new_window  # Keep a reference to the image
    button_new_window.place(x=475, y=325)  # Adjust coordinates as needed

# Create a canvas for drawing
canvas = tk.Canvas(root, width=width, height=height)
canvas.pack()

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((1000, 1000))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the ship image
ship_image_path = "./popupcodes/Ship.png"
ship_image = Image.open(ship_image_path)
ship_image = ship_image.resize((150, 150))
ship_photo_image = ImageTk.PhotoImage(ship_image)

# Create a canvas for the ship image
ship_canvas = canvas.create_image(650, 650, anchor="center", image=ship_photo_image)

# Load and resize the second aesthetic picture (Cargo.png)
cargo_image_path = "./popupcodes/Cargo.png"
cargo_image = Image.open(cargo_image_path)
cargo_image = cargo_image.resize((200, 200))
cargo_photo_image = ImageTk.PhotoImage(cargo_image)

# Create a canvas for the second aesthetic picture
cargo_canvas = canvas.create_image(150, 670, anchor="center", image=cargo_photo_image)

# Load and resize the third aesthetic picture (Airport.png)
airport_image_path = "./popupcodes/Airport.png"
airport_image = Image.open(airport_image_path)
airport_image = airport_image.resize((200, 200))
airport_photo_image = ImageTk.PhotoImage(airport_image)

# Create a canvas for the third aesthetic picture
airport_canvas = canvas.create_image(750, 500, anchor="center", image=airport_photo_image)

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png", 1), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png", 2), bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=
second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png", 3), bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png", 4), bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png", 5), bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png", 6), bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()






#
import tkinter as tk
from PIL import Image, ImageTk
import pygame
import threading
import sys
import random

# Initialize Pygame
pygame.init()

# Constants for the main game
WIDTH, HEIGHT = 1000, 1000
green = (152, 245, 255)
blue = (69, 139, 0)
bar_width = 400
bar_height = 20
font = ("Arial", 16)
water_current = 69
water_max = 100
food_current = 69
food_max = 100

# Constants for the minigame
minigame_width, minigame_height = 800, 600
BLACK = (23, 23, 23)
LIGHT_BLUE = (173, 216, 230)
DARK_BLUE = (0, 0, 139)
RED = (255, 0, 0)
GREY = (169, 169, 169)
WHITE = (255, 255, 255)

# Tkinter root window for the main game
root = tk.Tk()
root.title("Game Interface")

# Function to draw the water status bar and label
def draw_water_status():
    bar_fill_width = int(bar_width * (water_current / water_max))
    canvas.create_rectangle((WIDTH - bar_width) // 2, 10, (WIDTH - bar_width) // 2 + bar_fill_width, 10 + bar_height, fill=green)
    water_label.config(text="Water: {}/{}".format(water_current, water_max))

# Function to draw the food status bar and label
def draw_food_status():
    bar_fill_width = int(bar_width * (food_current / food_max))
    canvas.create_rectangle((WIDTH - bar_width) // 2, 40, (WIDTH - bar_width) // 2 + bar_fill_width, 40 + bar_height, fill=blue)
    food_label.config(text="Food: {}/{}".format(food_current, food_max))

# Main game loop
def update_statuses():
    while True:
        draw_water_status()
        draw_food_status()
        root.update()
        pygame.time.Clock().tick(30)

# Function to handle button clicks in the main game
def on_button_click(background_image_path, button_index):
    new_window = tk.Toplevel(root)
    new_window.title("New Window")

    # Load and resize the background image for the new window
    background_image = Image.open(background_image_path)
    background_image = background_image.resize((1000, 750))
    background_photo_image = ImageTk.PhotoImage(background_image)

    # Create a label for the background image
    background_label = tk.Label(new_window, image=background_photo_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    # Keep a reference to the image to prevent garbage collection
    new_window.background_photo_image = background_photo_image

    # Load and resize the button image for the new window
    button_image_path_new_window = "./popupcodes/Exclamation.png"
    button_image_new_window = Image.open(button_image_path_new_window)
    button_image_new_window = button_image_new_window.resize((50, 50))
    button_photo_image_new_window = ImageTk.PhotoImage(button_image_new_window)

    # Create the button on the new window
    button_new_window = tk.Button(new_window, image=button_photo_image_new_window, command=lambda: activate_minigame(new_window), bd=0, highlightthickness=0)
    button_new_window.image = button_photo_image_new_window
    button_new_window.place(x=475, y=325)

# Function to activate the minigame
def activate_minigame(parent_window):
    parent_window.destroy()  # Close the main game window
    run_minigame()

# Function to run the minigame
def run_minigame():
    # Set up the screen
    screen = pygame.display.set_mode((minigame_width, minigame_height))
    pygame.display.set_caption("Crack Clicker Game")

    # Fonts
    font = pygame.font.Font(None, 36)
    big_font = pygame.font.Font(None, 72)

    # Water bar
    water_bar = 100

    # List to store crack positions and values
    cracks = []

    # Variable to track remaining cracks
    remaining_cracks = 0

    # Flag to check if the "Good Job" screen is displayed
    good_job_screen = False

    # Main game loop
    running = True
    clock = pygame.time.Clock()

    generate_cracks()

    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if good_job_screen:
                    # Placeholder for good_job_screen_display()
                    pass
                else:
                    clicked_cracks = [crack for crack in cracks if pygame.Rect(crack[0][0] - 7, crack[0][1] - 7, 14, 14).collidepoint(event.pos)]
                    for crack in clicked_cracks:
                        water_bar -= crack[1]
                        remaining_cracks -= 1
                        cracks.remove(crack)
                        if remaining_cracks == 0:
                            good_job_screen = True

        screen.fill(LIGHT_BLUE)

        # Placeholder for draw_pipe()
        draw_pipe_placeholder()

        # Placeholder for draw_cracks()
        draw_cracks_placeholder()

        # Placeholder for draw_water_bar()
        draw_water_bar_placeholder()

        if good_job_screen:
            # Placeholder for good_job_screen_display()
            pass

        pygame.display.flip()

        clock.tick(60)

    pygame.quit()
    sys.exit()

# Function to generate cracks
def generate_cracks():
    global cracks, remaining_cracks
    cracks = [(random.randint(50, minigame_width - 50), random.randint(50, minigame_height - 50), random.randint(10, 30)) for _ in range(10)]
    remaining_cracks = len(cracks)

# Placeholder functions to avoid errors
def draw_pipe_placeholder():
    pass

def draw_cracks_placeholder():
    pass

def draw_water_bar_placeholder():
    pass

def good_job_screen_display_placeholder():
    pass

# Create a canvas for drawing in the main game
canvas = tk.Canvas(root, width=WIDTH, height=HEIGHT)
canvas.pack()

# Load and resize the map image
map_image_path = "./popupcodes/hi.jpeg"
map_image = Image.open(map_image_path)
map_image = map_image.resize((WIDTH, HEIGHT))
map_photo_image = ImageTk.PhotoImage(map_image)

# Create a canvas for the map image
canvas.create_image(0, 0, anchor="nw", image=map_photo_image)

# Load and resize the ship image
ship_image_path = "./popupcodes/Ship.png"
ship_image = Image.open(ship_image_path)
ship_image = ship_image.resize((150, 150))
ship_photo_image = ImageTk.PhotoImage(ship_image)

# Create a canvas for the ship image
ship_canvas = canvas.create_image(650, 650, anchor="center", image=ship_photo_image)

# Load and resize the second aesthetic picture (Cargo.png)
cargo_image_path = "./popupcodes/Cargo.png"
cargo_image = Image.open(cargo_image_path)
cargo_image = cargo_image.resize((200, 200))
cargo_photo_image = ImageTk.PhotoImage(cargo_image)

# Create a canvas for the second aesthetic picture
cargo_canvas = canvas.create_image(150, 670, anchor="center", image=cargo_photo_image)

# Load and resize the third aesthetic picture (Airport.png)
airport_image_path = "./popupcodes/Airport.png"
airport_image = Image.open(airport_image_path)
airport_image = airport_image.resize((200, 200))
airport_photo_image = ImageTk.PhotoImage(airport_image)

# Create a canvas for the third aesthetic picture
airport_canvas = canvas.create_image(750, 500, anchor="center", image=airport_photo_image)

# Display the water and food status labels
water_label = tk.Label(root, text="Water: {}/{}".format(water_current, water_max), font=font)
water_label.place(x=10, y=10)

food_label = tk.Label(root, text="Food: {}/{}".format(food_current, food_max), font=font)
food_label.place(x=10, y=40)

# Load and resize the first button image
button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
button_image = Image.open(button_image_path)
button_image = button_image.resize((40, 40))
button_photo_image = ImageTk.PhotoImage(button_image)

# Create the first button on the canvas with specified coordinates
first_button = tk.Button(root, image=button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png", 1), bd=0, highlightthickness=0)
first_button_x = 200
first_button_y = 500
canvas.create_window(first_button_x, first_button_y, anchor="center", window=first_button)

# Load and resize the second button image
second_button_image_path = "./popupcodes/Water.png"
second_button_image = Image.open(second_button_image_path)
second_button_image = second_button_image.resize((40, 40))
second_button_photo_image = ImageTk.PhotoImage(second_button_image)

# Create the second button on the canvas with specified coordinates
second_button = tk.Button(root, image=second_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png", 2), bd=0, highlightthickness=0)
second_button_x = 330
second_button_y = 390
canvas.create_window(second_button_x, second_button_y, anchor="center", window=second_button)

# Load and resize the third button image
third_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
third_button_image = Image.open(third_button_image_path)
third_button_image = third_button_image.resize((40, 40))
third_button_photo_image = ImageTk.PhotoImage(third_button_image)

# Create the third button on the canvas with specified coordinates
third_button = tk.Button(root, image=third_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png", 3), bd=0, highlightthickness=0)
third_button_x = 240  # Adjust the x-coordinate as needed
third_button_y = 420  # Adjust the y-coordinate as needed
canvas.create_window(third_button_x, third_button_y, anchor="center", window=third_button)

# Load and resize the fourth button image (duplicate of the first and third)
fourth_button_image_path = "./popupcodes/Wheat.png"  # Change this path accordingly
fourth_button_image = Image.open(fourth_button_image_path)
fourth_button_image = fourth_button_image.resize((40, 40))
fourth_button_photo_image = ImageTk.PhotoImage(fourth_button_image)

# Create the fourth button on the canvas with specified coordinates
fourth_button = tk.Button(root, image=fourth_button_photo_image, command=lambda: on_button_click("./popupcodes/Farm.png", 4), bd=0, highlightthickness=0)
fourth_button_x = 260  # Adjust the x-coordinate as needed
fourth_button_y = 530  # Adjust the y-coordinate as needed
canvas.create_window(fourth_button_x, fourth_button_y, anchor="center", window=fourth_button)

# Load and resize the fifth button image (duplicate of the second)
fifth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
fifth_button_image = Image.open(fifth_button_image_path)
fifth_button_image = fifth_button_image.resize((40, 40))
fifth_button_photo_image = ImageTk.PhotoImage(fifth_button_image)

# Create the fifth button on the canvas with specified coordinates
fifth_button = tk.Button(root, image=fifth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png", 5), bd=0, highlightthickness=0)
fifth_button_x = 520  # Adjust the x-coordinate as needed
fifth_button_y = 410  # Adjust the y-coordinate as needed
canvas.create_window(fifth_button_x, fifth_button_y, anchor="center", window=fifth_button)

# Load and resize the sixth button image (duplicate of the second)
sixth_button_image_path = "./popupcodes/Water.png"  # Change this path accordingly
sixth_button_image = Image.open(sixth_button_image_path)
sixth_button_image = sixth_button_image.resize((40, 40))
sixth_button_photo_image = ImageTk.PhotoImage(sixth_button_image)

# Create the sixth button on the canvas with specified coordinates
sixth_button = tk.Button(root, image=sixth_button_photo_image, command=lambda: on_button_click("./popupcodes/WaterPump.png", 6), bd=0, highlightthickness=0)
sixth_button_x = 550  # Adjust the x-coordinate as needed
sixth_button_y = 600  # Adjust the y-coordinate as needed
canvas.create_window(sixth_button_x, sixth_button_y, anchor="center", window=sixth_button)

# Start the main loop in a separate thread
loop_thread = threading.Thread(target=update_statuses)
loop_thread.start()

# Start Tkinter main loop
root.mainloop()



#ewhweb
from tkinter import Tk, Canvas, Label, PhotoImage
from PIL import Image, ImageTk

def on_hitbox_click(event):
    global last_x, last_y
    last_x, last_y = event.x, event.y

def on_drag(event, hitbox):
    global last_x, last_y
    canvas.move(hitbox, event.x - last_x, event.y - last_y)
    last_x, last_y = event.x, event.y
    check_collision(hitbox)

def check_collision(hitbox):
    global score
    hitbox_bbox = canvas.bbox(hitbox)
    overlapping_items = canvas.find_overlapping(*hitbox_bbox)

    for item in overlapping_items:
        if item != hitbox:
            print("Collision with", item)
            if score == 0:  # Check if the image has not scored before
                update_score()

def update_score():
    global score
    score += 1
    score_label.config(text=f"Score: {score}")

root = Tk()
root.title("First Image Example")

# Initialize the canvas widget
canvas = Canvas(root, width=1000, height=1000)
canvas.pack()

# Load and resize the first background image
first_image_path = "./popupcodes/strawpot.png"
first_image = Image.open(first_image_path)
first_image = first_image.resize((200, 200))
first_photo_image = ImageTk.PhotoImage(first_image)

# Create the first hitbox using the first background image
hitbox1 = canvas.create_image(100, 100, anchor="nw", image=first_photo_image)
canvas.tag_bind(hitbox1, "<Button-1>", lambda event: on_hitbox_click(event))
canvas.tag_bind(hitbox1, "<B1-Motion>", lambda event: on_drag(event, hitbox1))

# Make the hitbox draggable
last_x, last_y = 0, 0
score = 0

# Create a label for the scoreboard
score_label = Label(root, text=f"Score: {score}", font=("Arial", 16), bg="white")
score_label_id = canvas.create_window(10, 10, anchor="nw", window=score_label)

canvas.tag_bind(hitbox1, "<ButtonPress-1>", lambda event: on_hitbox_click(event))
canvas.tag_bind(hitbox1, "<B1-Motion>", lambda event: on_drag(event, hitbox1))

root.mainloop()
